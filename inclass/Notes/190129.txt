To use API:
    #include <unistd.h>
    #inclide <sys/types.h>
    #include <sys/wait.h>
    
Get the process identifier:
    getpid(): returns the id of the current process
    getppid(): returns the id of the parent process. Return 1 if it doesn't have a parent
    
Use fork() to create a new process:


Q1: How many processes will be created by the following code?
int main(){
    fork();
    fork();
    fork();
    print("Hi\n");
    return 0;
}

A: 8

Q7: 
int main(){
    for(int i = 0; i < 4; i++){
        pid_t pid = fork():
        if (pid >0){                  //parent 
            wait(NULL);
            break;
        }
    }
    print("Hi\n");
    return 0;
    
Q5:
int main(){
    int x = 1;
    if(fork() = 0){
        x++;
        printf("Child has x = %d\n", x);
    }
    else{
        x--;
        printf("parent has x = %d\n",x);
    }
}

Q6:
int main(){
    fork() && fork() || fork();
    print("Hi\n");
    return 0;
}